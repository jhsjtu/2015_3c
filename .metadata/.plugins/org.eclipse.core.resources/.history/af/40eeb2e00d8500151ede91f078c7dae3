package com.example.demo3c;


import com.example.demo3c.DeviceListFragment.DeviceActionListener;

import android.app.ActionBar;
import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.content.BroadcastReceiver;
import android.content.IntentFilter;
import android.net.wifi.p2p.WifiP2pManager;
import android.net.wifi.p2p.WifiP2pManager.Channel;
import android.net.wifi.p2p.WifiP2pManager.ChannelListener;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class ActionBar_TabNav extends Activity implements
	ActionBar.TabListener,
	ChannelListener,
	DeviceActionListener
{
	private static final String SELECTED_ITEM = "selected_item";
	TextView tv;
	@Override
	public void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		final ActionBar actionBar = getActionBar();
		// 设置ActionBar的导航方式：Tab导航
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
		// 依次添加3个Tab页，并为3个Tab标签添加事件监听器
		actionBar.addTab(actionBar.newTab().setText("连接")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("按键")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("声音")
			.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
			.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
				.setTabListener(this));
		actionBar.addTab(actionBar.newTab().setText("手势")
				.setTabListener(this));
		
		//textView
		
		 tv= (TextView)findViewById(R.id.textView);
		tv.setText("Hello,pp!");
		//tv.setOnClickListener(null);
		
		Button bt=(Button)findViewById(R.id.button);
		bt.setOnClickListener(new OnClickListener(){

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				tv.setText("msoswdewh");
			}
			
		});
	}
	
	
	/*create a options menu*/
	@Override
	public boolean onCreateOptionsMenu(Menu menu)
	{
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.action_items, menu);
		return true;
	}
	

	@Override
	public void onRestoreInstanceState(Bundle savedInstanceState)
	{
		if (savedInstanceState.containsKey(SELECTED_ITEM))
		{
			// 选中前面保存的索引对应的Fragment页
			getActionBar().setSelectedNavigationItem(
				savedInstanceState.getInt(SELECTED_ITEM));
		}
	}

	@Override
	public void onSaveInstanceState(Bundle outState)
	{
		// 将当前选中的Fragment页的索引保存到Bundle中
		outState.putInt(SELECTED_ITEM, 
			getActionBar().getSelectedNavigationIndex());
	}

	@Override
	public void onTabUnselected(ActionBar.Tab tab,
		FragmentTransaction fragmentTransaction)
	{
	}
	// 当指定Tab被选中时激发该方法
	@Override
	public void onTabSelected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction)
	{
		
		Fragment fragment = null;
		
		switch(tab.getPosition()){
		case(1):{
			// 创建一个新的Fragment对象
			fragment=new ButtonControlFragment();
			break;
			}
		}
		if (fragment!=null){
			// 获取FragmentTransaction对象
			FragmentTransaction ft = getFragmentManager()
					.beginTransaction();
			// 使用fragment代替该Activity中的container组件
			ft.replace(R.id.container, fragment);
			// 提交事务
			ft.commit();
		}
	}

	@Override
	public void onTabReselected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction)
	{
	}
	
	
	//the following is for wifi 
	public static final String TAG = "wifidirectdemo";
	private WifiP2pManager manager;
	private boolean isWifiP2pEnabled = false;
	private boolean retryChannel = false;

	private final IntentFilter intentFilter = new IntentFilter();
	private Channel channel;
	private BroadcastReceiver receiver = null;

	/**
	 * @param isWifiP2pEnabled
	 *            the isWifiP2pEnabled to set
	 */
	public void setIsWifiP2pEnabled(boolean isWifiP2pEnabled)
	{
		this.isWifiP2pEnabled = isWifiP2pEnabled;
	}

}
